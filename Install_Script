#!/bin/bash

#Check operating System

echo 'This Shell-Script is working only for Linux Debian(3.16.5*) Jessie. Your current OS is:'
unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*) machine=Linux;;
    Darwin*) machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac
echo ${machine}

echo 'Do u want to continue?'
select answer in "Yes" "No"; do
    case $answer in
        Yes ) break;;
        No ) exit;;
    esac
done

#Installation Python3 and Django
    echo 'Python3 and Django are needed. Install now?'
    select answer in "Yes" "No"; do
        case $answer in
            Yes ) echo 'Python3 and Django are now installing:'; echo 'apt-get -y install python3-django';echo 'Python and Django were successfully installed!'; break;;
            No ) exit;;
        esac
    done

#Check if installed the right versions
echo 'Your current Python version is:'
python3 --version
echo 'Your current Django version is:'
python3 -m django --version

#Installation MySQL
    echo "MySQL-Server is needed. Install now?"
    select answer in "Yes" "No"; do
        case $answer in
            Yes ) echo 'MySQL is now installing! Please write the following parameters down:'; echo 'user'; echo 'password'; echo 'apt-get -y install mysql-server python3-mysql.connector';echo 'MySQL was successfully installed!'; break;;
            No ) exit;;
        esac
    done

echo 'Your current MySQL version is:'
mysql -V

root_password=$1
user=$2
user_password=$3
database=$4

read -p "Please tell me your root-password:" root_password
read -p "Choose your database-name:" database
read -p "Choose your username:" user
read -p "Choose your username-password:" user_password

#Create a database and a user
mysql -u root -p$root_password -Bse "CREATE DATABASE $database;
CREATE USER '$user'@'localhost' IDENTIFIED BY '$user_password';
GRANT ALL PRIVILEGES ON $database.* TO '$user'@localhost WITH GRANT OPTION;"

#Connect the databse to the project
cd mysite/mysite/
echo "
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'l$_(vx@xe*)5nxdv#c(-a4qq^*=u*8wuul_ow+fj%r*l+j#g*n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.mysql',
        'ENGINE': 'mysql.connector.django',
        'NAME': 'mysite',
        'USER': '$user',
        'PASSWORD': '$user_password',
        'HOST': 'localhost',
    }


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
" > settings.py

cd ..
#python3 manage.py migrate
#python3 manage.py runserver

#mysql -u root -p$root_password -Bse "DROP DATABASE $database; DROP USER '$user'@localhost;"
